{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["/**\r\n * Interface representing the glslang module\r\n */\r\nexport interface IGLSLang {\r\n  compileGLSL(\r\n    glsl: string,\r\n    type: \"vertex\" | \"fragment\" | \"compute\"\r\n  ): Uint32Array;\r\n}\r\n\r\n/**\r\n * Returns an initialized module of the glslang compiler\r\n */\r\nexport async function getGLSLangModule(): Promise<IGLSLang> {\r\n  // @ts-ignore\r\n  const glslangModule = await import(\"https://unpkg.com/@webgpu/glslang@0.0.15/dist/web-devel/glslang.js\");\r\n  const glslang = await glslangModule.default();\r\n  return glslang;\r\n}\r\n\r\n/**\r\n * Query an html element by the provided selector\r\n * @param selector - The selector to query for\r\n */\r\nexport function $(selector: string): HTMLElement {\r\n  return document.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Load a text from the provided path\r\n * @param path - The path to load the text from\r\n */\r\nexport function fetchText(path: string): Promise<string> {\r\n  return new Promise(resolve => {\r\n    fetch(path).then(resp => {\r\n      resp.text().then(resolve);\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Load a buffer from the provided path\r\n * @param path - The path to load the buffer from\r\n */\r\nexport function fetchBuffer(path: string): Promise<ArrayBuffer> {\r\n  return new Promise(resolve => {\r\n    fetch(path).then(resp => {\r\n      resp.arrayBuffer().then(resolve);\r\n    });\r\n  });\r\n}\r\n","/// <reference types=\"@webgpu/types\" />\r\n\r\nimport {mat4, vec3} from \"gl-matrix\";\r\n\r\nimport {\r\n  fetchText,\r\n  getGLSLangModule\r\n} from \"./utils\";\r\n\r\n/**\r\n * Does magic\r\n * @param canvas - The canvas to render into\r\n */\r\nexport default async function main(canvas: HTMLCanvasElement) {\r\n\r\n  const glslang = await getGLSLangModule();\r\n\r\n  const adapter = await navigator.gpu.requestAdapter();\r\n\r\n  const device = await adapter.requestDevice();\r\n\r\n  const context = canvas.getContext(\"gpupresent\");\r\n\r\n  const swapChainFormat = await context.getSwapChainPreferredFormat(adapter as any);\r\n\r\n  const swapChain = context.configureSwapChain({\r\n    device,\r\n    format: swapChainFormat,\r\n  });\r\n\r\n  const mModel = mat4.create();\r\n  const mView = mat4.create();\r\n  const mProjection = mat4.create();\r\n  const mModelViewProjection = mat4.create();\r\n  mat4.perspective(mProjection, (2 * Math.PI) / 5, -Math.abs(canvas.width / canvas.height), 0.1, 768.0);\r\n  mat4.translate(mView, mView, vec3.fromValues(0, 0, -2));\r\n\r\n  const blitVertexShaderSource = await fetchText(\"./shaders/blit.vert\");\r\n  const blitFragmentShaderSource = await fetchText(\"./shaders/blit.frag\");\r\n  const rasterComputeShaderSource = await fetchText(\"./shaders/rasterizer.comp\");\r\n\r\n  const screenBuffer = device.createTexture({\r\n    size: {\r\n      width: canvas.width,\r\n      height: canvas.height,\r\n      depth: 1,\r\n    },\r\n    format: \"rgba32float\",\r\n    usage: GPUTextureUsage.STORAGE | GPUTextureUsage.SAMPLED\r\n  });\r\n  const screenBufferView = screenBuffer.createView();\r\n\r\n  const depthBuffer = device.createBuffer({\r\n    size: canvas.width * canvas.height * 1 * Float32Array.BYTES_PER_ELEMENT,\r\n    usage: GPUBufferUsage.STORAGE,\r\n  });\r\n\r\n  const rasterDisplayUniform = device.createBuffer({\r\n    size: 4 * 4 * Float32Array.BYTES_PER_ELEMENT,\r\n    usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\r\n  });\r\n\r\n  const rasterRasterizationUniform = device.createBuffer({\r\n    size: 8 * Float32Array.BYTES_PER_ELEMENT,\r\n    usage: GPUBufferUsage.UNIFORM,\r\n    mappedAtCreation: true,\r\n  });\r\n  new Float32Array(rasterRasterizationUniform.getMappedRange()).set(new Float32Array([\r\n    // Viewport\r\n    0, 0, canvas.width, canvas.height,\r\n    // Depth range\r\n    0.0, 1.0, 0.0, 0.0\r\n  ]));\r\n  rasterRasterizationUniform.unmap();\r\n\r\n  const rasterPipeline = device.createComputePipeline({\r\n    computeStage: {\r\n      module: device.createShaderModule({\r\n        code: glslang.compileGLSL(rasterComputeShaderSource, \"compute\")\r\n      }),\r\n      entryPoint: \"main\"\r\n    },\r\n  });\r\n  const rasterBindGroup = device.createBindGroup({\r\n    layout: rasterPipeline.getBindGroupLayout(0),\r\n    entries: [\r\n      {binding: 0, resource: screenBufferView},\r\n      {binding: 1, resource: {buffer: depthBuffer}},\r\n      {binding: 2, resource: {buffer: rasterRasterizationUniform}},\r\n      {binding: 3, resource: {buffer: rasterDisplayUniform}},\r\n    ]\r\n  });\r\n\r\n  const blitSampler = device.createSampler({\r\n    magFilter: \"linear\",\r\n    minFilter: \"linear\",\r\n  });\r\n  const blitBindGroupLayout = device.createBindGroupLayout({\r\n    entries: [\r\n      {binding: 0, visibility: GPUShaderStage.FRAGMENT, sampler: {type: \"filtering\"}},\r\n      {binding: 1, visibility: GPUShaderStage.FRAGMENT, texture: {sampleType: \"float\", viewDimension: \"2d\"}},\r\n    ]\r\n  } as any);\r\n  const blitBindGroup = device.createBindGroup({\r\n    layout: blitBindGroupLayout,\r\n    entries: [\r\n      {binding: 0, resource: blitSampler},\r\n      {binding: 1, resource: screenBufferView},\r\n    ]\r\n  });\r\n  const blitPipelineLayout = device.createPipelineLayout({\r\n    bindGroupLayouts: [blitBindGroupLayout]\r\n  });\r\n  const blitPipeline = device.createRenderPipeline({\r\n    layout: blitPipelineLayout,\r\n    vertexStage: {\r\n      module: device.createShaderModule({\r\n        code: glslang.compileGLSL(blitVertexShaderSource, \"vertex\")\r\n      }),\r\n      entryPoint: \"main\"\r\n    },\r\n    fragmentStage: {\r\n      module: device.createShaderModule({\r\n        code: glslang.compileGLSL(blitFragmentShaderSource, \"fragment\")\r\n      }),\r\n      entryPoint: \"main\"\r\n    },\r\n    primitiveTopology: \"triangle-list\",\r\n    colorStates: [\r\n      {format: swapChainFormat},\r\n    ],\r\n  });\r\n\r\n  requestAnimationFrame(function drawLoop(time: number) {\r\n    requestAnimationFrame(drawLoop);\r\n\r\n    mat4.identity(mModel);\r\n    mat4.rotateY(mModel, mModel, time * 0.001);\r\n    mat4.scale(mModel, mModel, vec3.fromValues(1, 1, 1));\r\n    mat4.multiply(mModelViewProjection, mView, mModel);\r\n    mat4.multiply(mModelViewProjection, mProjection, mModelViewProjection);\r\n    device.defaultQueue.writeBuffer(rasterDisplayUniform, 0x0, mModelViewProjection as Float32Array);\r\n\r\n    const swapchainTexture = swapChain.getCurrentTexture();\r\n    const swapchainTextureView = swapchainTexture.createView();\r\n\r\n    const renderPassDescriptor = {\r\n      colorAttachments: [{\r\n        attachment: swapchainTextureView,\r\n        loadValue: {r: 0.0, g: 0.0, b: 0.0, a: 1.0},\r\n      }],\r\n    };\r\n\r\n    // Rasterization\r\n    {\r\n      const commandEncoder = device.createCommandEncoder({});\r\n      const computePass = commandEncoder.beginComputePass();\r\n      computePass.setPipeline(rasterPipeline);\r\n      computePass.setBindGroup(0, rasterBindGroup);\r\n      computePass.dispatch(Math.ceil(canvas.width / 8), Math.ceil(canvas.height / 8), 1);\r\n      computePass.endPass();\r\n      const commandBuffer = commandEncoder.finish();\r\n      device.defaultQueue.submit([commandBuffer]);\r\n    }\r\n\r\n    // Screen blit\r\n    {\r\n      const commandEncoder = device.createCommandEncoder({});\r\n      const passEncoder = commandEncoder.beginRenderPass(renderPassDescriptor);\r\n      passEncoder.setPipeline(blitPipeline);\r\n      passEncoder.setBindGroup(0, blitBindGroup);\r\n      passEncoder.draw(6, 1, 0, 0);\r\n      passEncoder.endPass();\r\n      const commandBuffer = commandEncoder.finish();\r\n      device.defaultQueue.submit([commandBuffer]);\r\n    }\r\n  });\r\n\r\n};\r\n"],"names":["mat4","vec3"],"mappings":";;;IAUA;;;IAGO,eAAe,gBAAgB;;QAEpC,MAAM,aAAa,GAAG,MAAM,OAAO,oEAAoE,CAAC,CAAC;QACzG,MAAM,OAAO,GAAG,MAAM,aAAa,CAAC,OAAO,EAAE,CAAC;QAC9C,OAAO,OAAO,CAAC;IACjB,CAAC;IAUD;;;;aAIgB,SAAS,CAAC,IAAY;QACpC,OAAO,IAAI,OAAO,CAAC,OAAO;YACxB,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI;gBACnB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC3B,CAAC,CAAC;SACJ,CAAC,CAAC;IACL;;ICtCA;IASA;;;;IAIe,eAAe,IAAI,CAAC,MAAyB;QAE1D,MAAM,OAAO,GAAG,MAAM,gBAAgB,EAAE,CAAC;QAEzC,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QAErD,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;QAE7C,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAEhD,MAAM,eAAe,GAAG,MAAM,OAAO,CAAC,2BAA2B,CAAC,OAAc,CAAC,CAAC;QAElF,MAAM,SAAS,GAAG,OAAO,CAAC,kBAAkB,CAAC;YAC3C,MAAM;YACN,MAAM,EAAE,eAAe;SACxB,CAAC,CAAC;QAEH,MAAM,MAAM,GAAGA,aAAI,CAAC,MAAM,EAAE,CAAC;QAC7B,MAAM,KAAK,GAAGA,aAAI,CAAC,MAAM,EAAE,CAAC;QAC5B,MAAM,WAAW,GAAGA,aAAI,CAAC,MAAM,EAAE,CAAC;QAClC,MAAM,oBAAoB,GAAGA,aAAI,CAAC,MAAM,EAAE,CAAC;QAC3CA,aAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACtGA,aAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAEC,aAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAExD,MAAM,sBAAsB,GAAG,MAAM,SAAS,CAAC,qBAAqB,CAAC,CAAC;QACtE,MAAM,wBAAwB,GAAG,MAAM,SAAS,CAAC,qBAAqB,CAAC,CAAC;QACxE,MAAM,yBAAyB,GAAG,MAAM,SAAS,CAAC,2BAA2B,CAAC,CAAC;QAE/E,MAAM,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC;YACxC,IAAI,EAAE;gBACJ,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,KAAK,EAAE,CAAC;aACT;YACD,MAAM,EAAE,aAAa;YACrB,KAAK,EAAE,eAAe,CAAC,OAAO,GAAG,eAAe,CAAC,OAAO;SACzD,CAAC,CAAC;QACH,MAAM,gBAAgB,GAAG,YAAY,CAAC,UAAU,EAAE,CAAC;QAEnD,MAAM,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC;YACtC,IAAI,EAAE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,YAAY,CAAC,iBAAiB;YACvE,KAAK,EAAE,cAAc,CAAC,OAAO;SAC9B,CAAC,CAAC;QAEH,MAAM,oBAAoB,GAAG,MAAM,CAAC,YAAY,CAAC;YAC/C,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,iBAAiB;YAC5C,KAAK,EAAE,cAAc,CAAC,OAAO,GAAG,cAAc,CAAC,QAAQ;SACxD,CAAC,CAAC;QAEH,MAAM,0BAA0B,GAAG,MAAM,CAAC,YAAY,CAAC;YACrD,IAAI,EAAE,CAAC,GAAG,YAAY,CAAC,iBAAiB;YACxC,KAAK,EAAE,cAAc,CAAC,OAAO;YAC7B,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC;QACH,IAAI,YAAY,CAAC,0BAA0B,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,YAAY,CAAC;;YAEjF,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM;;YAEjC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SACnB,CAAC,CAAC,CAAC;QACJ,0BAA0B,CAAC,KAAK,EAAE,CAAC;QAEnC,MAAM,cAAc,GAAG,MAAM,CAAC,qBAAqB,CAAC;YAClD,YAAY,EAAE;gBACZ,MAAM,EAAE,MAAM,CAAC,kBAAkB,CAAC;oBAChC,IAAI,EAAE,OAAO,CAAC,WAAW,CAAC,yBAAyB,EAAE,SAAS,CAAC;iBAChE,CAAC;gBACF,UAAU,EAAE,MAAM;aACnB;SACF,CAAC,CAAC;QACH,MAAM,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;YAC7C,MAAM,EAAE,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC5C,OAAO,EAAE;gBACP,EAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAC;gBACxC,EAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAC,MAAM,EAAE,WAAW,EAAC,EAAC;gBAC7C,EAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAC,MAAM,EAAE,0BAA0B,EAAC,EAAC;gBAC5D,EAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAC,MAAM,EAAE,oBAAoB,EAAC,EAAC;aACvD;SACF,CAAC,CAAC;QAEH,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC;YACvC,SAAS,EAAE,QAAQ;YACnB,SAAS,EAAE,QAAQ;SACpB,CAAC,CAAC;QACH,MAAM,mBAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC;YACvD,OAAO,EAAE;gBACP,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,WAAW,EAAC,EAAC;gBAC/E,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAC,UAAU,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI,EAAC,EAAC;aACvG;SACK,CAAC,CAAC;QACV,MAAM,aAAa,GAAG,MAAM,CAAC,eAAe,CAAC;YAC3C,MAAM,EAAE,mBAAmB;YAC3B,OAAO,EAAE;gBACP,EAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAC;gBACnC,EAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAC;aACzC;SACF,CAAC,CAAC;QACH,MAAM,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC;YACrD,gBAAgB,EAAE,CAAC,mBAAmB,CAAC;SACxC,CAAC,CAAC;QACH,MAAM,YAAY,GAAG,MAAM,CAAC,oBAAoB,CAAC;YAC/C,MAAM,EAAE,kBAAkB;YAC1B,WAAW,EAAE;gBACX,MAAM,EAAE,MAAM,CAAC,kBAAkB,CAAC;oBAChC,IAAI,EAAE,OAAO,CAAC,WAAW,CAAC,sBAAsB,EAAE,QAAQ,CAAC;iBAC5D,CAAC;gBACF,UAAU,EAAE,MAAM;aACnB;YACD,aAAa,EAAE;gBACb,MAAM,EAAE,MAAM,CAAC,kBAAkB,CAAC;oBAChC,IAAI,EAAE,OAAO,CAAC,WAAW,CAAC,wBAAwB,EAAE,UAAU,CAAC;iBAChE,CAAC;gBACF,UAAU,EAAE,MAAM;aACnB;YACD,iBAAiB,EAAE,eAAe;YAClC,WAAW,EAAE;gBACX,EAAC,MAAM,EAAE,eAAe,EAAC;aAC1B;SACF,CAAC,CAAC;QAEH,qBAAqB,CAAC,SAAS,QAAQ,CAAC,IAAY;YAClD,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YAEhCD,aAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACtBA,aAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC,CAAC;YAC3CA,aAAI,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAEC,aAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACrDD,aAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YACnDA,aAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,WAAW,EAAE,oBAAoB,CAAC,CAAC;YACvE,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,oBAAoB,EAAE,GAAG,EAAE,oBAAoC,CAAC,CAAC;YAEjG,MAAM,gBAAgB,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC;YACvD,MAAM,oBAAoB,GAAG,gBAAgB,CAAC,UAAU,EAAE,CAAC;YAE3D,MAAM,oBAAoB,GAAG;gBAC3B,gBAAgB,EAAE,CAAC;wBACjB,UAAU,EAAE,oBAAoB;wBAChC,SAAS,EAAE,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAC;qBAC5C,CAAC;aACH,CAAC;;YAGF;gBACE,MAAM,cAAc,GAAG,MAAM,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;gBACvD,MAAM,WAAW,GAAG,cAAc,CAAC,gBAAgB,EAAE,CAAC;gBACtD,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;gBACxC,WAAW,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;gBAC7C,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACnF,WAAW,CAAC,OAAO,EAAE,CAAC;gBACtB,MAAM,aAAa,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC;gBAC9C,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;aAC7C;;YAGD;gBACE,MAAM,cAAc,GAAG,MAAM,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;gBACvD,MAAM,WAAW,GAAG,cAAc,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC;gBACzE,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;gBACtC,WAAW,CAAC,YAAY,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;gBAC3C,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,WAAW,CAAC,OAAO,EAAE,CAAC;gBACtB,MAAM,aAAa,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC;gBAC9C,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;aAC7C;SACF,CAAC,CAAC;IAEL;;;;;;;;"}